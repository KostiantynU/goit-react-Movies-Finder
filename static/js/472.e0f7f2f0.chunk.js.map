{"version":3,"file":"static/js/472.e0f7f2f0.chunk.js","mappings":"+PACaA,EAAqBC,EAAAA,GAAAA,GAAH,qK,SCiB/B,I,EAAA,EAbA,YAAsE,IAA9CC,EAA6C,EAA7CA,UAAWC,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,gBAChD,OACE,UAACJ,EAAD,YACE,gBACEK,IAAKD,EAAe,UAAME,EAAAA,IAAN,OAAmBF,GAAnB,U,2rFACpBG,IAAKJ,KAEP,uBAAIA,KACJ,uBAAID,MAGT,ECfYM,EAAWP,EAAAA,GAAAA,GAAH,kGCkDrB,MA5CA,WACE,OAAkCQ,EAAAA,EAAAA,YAAlC,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OAPAE,EAAAA,EAAAA,YAAU,WACRH,GAAY,IACZI,EAAAA,EAAAA,IAAWH,GACRI,MAAK,SAAAC,GAAM,OAAIR,EAAaQ,EAAOC,KAAxB,IACXC,QAAQR,GAAY,GACxB,GAAE,CAACC,KAGF,gCACGF,IACC,SAAC,KAAD,CACEU,OAAO,MACPC,MAAM,MACNC,OAAO,KACPC,MAAM,oBACNC,UAAU,gBACVC,aAAc,CAAEC,eAAgB,UAChCC,iBAAiB,GACjBC,SAAS,KAGH,OAATpB,QAAS,IAATA,OAAA,EAAAA,EAAWqB,QAAS,GACnB,SAACvB,EAAD,UACGE,EAAUsB,KACT,gBAAGC,EAAH,EAAGA,UAAW/B,EAAd,EAAcA,UAAiBC,EAA/B,EAAyB+B,KAAmC9B,EAA5D,EAA8C+B,aAA9C,OACE,SAAC,EAAD,CAEEjC,UAAWA,EACXC,cAAeA,EACfC,gBAAiBA,GAHZ6B,EAFT,OAWJ,yBAAK,mCAIZ,C,iNClDKG,EAAU,2CACVC,EAAW,gCACXC,EAAY,qBACLhC,EAAa,kCAEnB,SAAeiC,IAAtB,4CAAO,OAAP,oBAAO,8FACQC,MAAM,GAAD,OAAIH,GAAJ,OAAeC,EAAf,YAA4BF,IAC3ClB,MAAK,SAAAuB,GAAQ,OAAIA,EAASC,MAAb,IACbC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,IAHP,0GAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAwBjC,GAAxB,iFACQ0B,MAAM,GAAD,OAAIH,EAAJ,iBAAqBvB,EAArB,YAAgCsB,EAAhC,oBACflB,MAAK,SAAAuB,GAAQ,OAAIA,EAASC,MAAb,IACbC,OAAM,SAAAC,GAAG,OAAIC,QAAQG,MAAMJ,EAAlB,IAHP,0GAKA,SAAe3B,EAAtB,+CAAO,OAAP,oBAAO,WAA0BH,GAA1B,iFACQ0B,MAAM,GAAD,OAAIH,EAAJ,iBAAqBvB,EAArB,oBAAwCsB,EAAxC,oBACflB,MAAK,SAAAuB,GAAQ,OAAIA,EAASC,MAAb,IACbC,OAAM,SAAAC,GAAG,OAAIC,QAAQG,MAAMJ,EAAlB,IAHP,0GAKA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAyBnC,GAAzB,iFACQ0B,MAAM,GAAD,OAAIH,EAAJ,iBAAqBvB,EAArB,oBAAwCsB,EAAxC,2BACflB,MAAK,SAAAuB,GAAQ,OAAIA,EAASC,MAAb,IACbC,OAAM,SAAAC,GAAG,OAAIC,QAAQG,MAAMJ,EAAlB,IAHP,0GAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,iFACQX,MAAM,GAAD,OAAIH,EAAJ,wBAA4BD,EAA5B,kBAA6Ce,IAC5DjC,MAAK,SAAAuB,GAAQ,OAAIA,EAASC,MAAb,IACbC,OAAM,SAAAC,GAAG,OAAIC,QAAQG,MAAMJ,EAAlB,IAHP,0G","sources":["components/CastListItem/CastListItemStyled.js","components/CastListItem/CastListItem.jsx","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/API.js"],"sourcesContent":["import styled from 'styled-components';\nexport const CastListItemStyled = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  width: 250px;\n  background-color: rgb(218, 242, 247);\n`;\n","import PropTypes from 'prop-types';\nimport { CastListItemStyled } from './CastListItemStyled';\nimport { IMAGE_PATH } from '../../services/API';\nimport notFoundImg from '../../images/395x574-no-image.jpg';\n\nfunction CastListItem({ character, characterName, charachterPhoto }) {\n  return (\n    <CastListItemStyled>\n      <img\n        src={charachterPhoto ? `${IMAGE_PATH}${charachterPhoto}` : `${notFoundImg}`}\n        alt={characterName}\n      />\n      <p>{characterName}</p>\n      <p>{character}</p>\n    </CastListItemStyled>\n  );\n}\n\nexport default CastListItem;\n\nCastListItem.propTypes = {\n  character: PropTypes.string.isRequired,\n  characterName: PropTypes.string.isRequired,\n  charachterPhoto: PropTypes.string,\n};\n","import styled from 'styled-components';\nexport const CastList = styled.ul`\n  display: grid;\n  gap: 10px;\n  grid-template-columns: repeat(3, 1fr);\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCredits } from 'services/API';\nimport { Watch } from 'react-loader-spinner';\nimport CastListItem from 'components/CastListItem/CastListItem';\nimport { CastList } from './Cast.styled';\n\nfunction Cast() {\n  const [creditArr, setCreditArr] = useState();\n  const [isLoader, setIsLoader] = useState(false);\n  const { movieId } = useParams();\n  useEffect(() => {\n    setIsLoader(true);\n    getCredits(movieId)\n      .then(result => setCreditArr(result.cast))\n      .finally(setIsLoader(false));\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoader && (\n        <Watch\n          height=\"100\"\n          width=\"100\"\n          radius=\"48\"\n          color=\"rgb(73, 203, 230)\"\n          ariaLabel=\"watch-loading\"\n          wrapperStyle={{ justifyContent: 'center' }}\n          wrapperClassName=\"\"\n          visible={true}\n        />\n      )}\n      {creditArr?.length > 0 ? (\n        <CastList>\n          {creditArr.map(\n            ({ credit_id, character, name: characterName, profile_path: charachterPhoto }) => (\n              <CastListItem\n                key={credit_id}\n                character={character}\n                characterName={characterName}\n                charachterPhoto={charachterPhoto}\n              ></CastListItem>\n            )\n          )}\n        </CastList>\n      ) : (\n        <div>Information does not exists.</div>\n      )}\n    </>\n  );\n}\nexport default Cast;\n","const API_KEI = 'api_key=01e602e077bffb2dd10fabcf093ebced';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TREND_DAY = 'trending/movie/day';\nexport const IMAGE_PATH = 'https://image.tmdb.org/t/p/w300';\n\nexport async function getMovies() {\n  return await fetch(`${BASE_URL}${TREND_DAY}?${API_KEI}`)\n    .then(response => response.json())\n    .catch(err => console.log(err));\n}\nexport async function getMovie(movieId) {\n  return await fetch(`${BASE_URL}movie/${movieId}?${API_KEI}&language=en-US`)\n    .then(response => response.json())\n    .catch(err => console.error(err));\n}\nexport async function getCredits(movieId) {\n  return await fetch(`${BASE_URL}movie/${movieId}/credits?${API_KEI}&language=en-US`)\n    .then(response => response.json())\n    .catch(err => console.error(err));\n}\nexport async function getReview(movieId) {\n  return await fetch(`${BASE_URL}movie/${movieId}/reviews?${API_KEI}&language=en-US&page=1`)\n    .then(response => response.json())\n    .catch(err => console.error(err));\n}\nexport async function searchMovies(query) {\n  return await fetch(`${BASE_URL}search/movie?${API_KEI}&query=${query}`)\n    .then(response => response.json())\n    .catch(err => console.error(err));\n}\n"],"names":["CastListItemStyled","styled","character","characterName","charachterPhoto","src","IMAGE_PATH","alt","CastList","useState","creditArr","setCreditArr","isLoader","setIsLoader","movieId","useParams","useEffect","getCredits","then","result","cast","finally","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","wrapperClassName","visible","length","map","credit_id","name","profile_path","API_KEI","BASE_URL","TREND_DAY","getMovies","fetch","response","json","catch","err","console","log","getMovie","error","getReview","searchMovies","query"],"sourceRoot":""}