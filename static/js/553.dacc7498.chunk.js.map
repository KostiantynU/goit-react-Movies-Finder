{"version":3,"file":"static/js/553.dacc7498.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.16\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.16\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.16 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","isRefObject","ref","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","concat","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","PresenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","useIsomorphicLayoutEffect","render","useEffect","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","LayoutGroupContext","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","transformName","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","propertyIsEnumerable","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","_classCallCheck","this","isMounted","_createClass","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","frame","HoverGesture","_Feature","_inherits","_super","_createSuper","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_slicedToArray","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","invariant","_definition","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","_info$values","tokenised","_toConsumableArray","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","warning","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","timestamp","stop","cancelFrame","now","frameData","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","cancel","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","_transition$elapsed","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","add","addUniqueItem","item","removeItem","index","SubscriptionManager","subscriptions","numSubscriptions","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","remove","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","_ref3","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","data","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","steps","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","splitCSSVariableRegex","maxDepth","getVariableValue","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","fallback","getPropertyValue","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","_get","Reflect","property","receiver","base","getPrototypeOf","desc","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig"],"sourceRoot":""}